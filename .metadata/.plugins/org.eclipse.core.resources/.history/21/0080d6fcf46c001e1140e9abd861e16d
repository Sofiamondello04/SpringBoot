package com.curso.inventory.services;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.curso.inventory.dao.ICategoryDao;
import com.curso.inventory.model.Category;
import com.curso.inventory.response.CategoryResponseRest;

@Service

public class CategoryServiceImpl implements ICategoryService {
	
	@Autowired //Para instanciar objetos- INYECCION DE DEPENDENCIA
	private ICategoryDao categoryDao;

	@Override
	@Transactional(readOnly=true)
	public ResponseEntity<CategoryResponseRest> search() {
		// TODO Auto-generated method stub
		CategoryResponseRest response = new CategoryResponseRest();
		try {
			List<Category> category = (List<Category>)categoryDao.findAll();
			response.getCategoryResponse().setCategory(category);
			response.setMetadaData("Respuesta ok", "00", "Respuesta exitosa");
		}
		catch (Exception e) {
			response.setMetadaData("Respuesta error", "-1", "Error");
			e.getStackTrace();
			return new ResponseEntity<CategoryResponseRest>(response, HttpStatus.INTERNAL_SERVER_ERROR);
			}
		
		return new ResponseEntity<CategoryResponseRest>(response, HttpStatus.OK);
	}

	@Override
	@Transactional(readOnly=true)
	public ResponseEntity<CategoryResponseRest> searchById(Long id) {
		CategoryResponseRest response = new CategoryResponseRest();
		List <Category> list = new ArrayList<>();
		try {
			//Optional
			Optional<Category> category = categoryDao.findById(id);
		}
		catch (Exception e) {
			response.setMetadaData("Respuesta error", "-1", "Error al consultar por id");
			e.getStackTrace();
			return new ResponseEntity<CategoryResponseRest>(response, HttpStatus.INTERNAL_SERVER_ERROR);
			}
		
		return new ResponseEntity<CategoryResponseRest>(response, HttpStatus.OK);
	}

}
